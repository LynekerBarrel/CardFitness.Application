@model IEnumerable<AdmSimposio.Models.InscricaoCategoriaModeloRelatorio>
@{
    ViewData["Title"] = "Lista de Trabalhos";
}
<script src="~/Notify/js/bootstrap-notify.min.js"></script>
<script src="~/js/SimposioValidate.js"></script>
<script src="~/vendor/datatables/js/jquery.dataTables.min.js"></script>
<script src="~/vendor/datatables/js/dataTables.bootstrap.min.js"></script>
<script type="text/javascript" src="dataTables.numericComma.js"></script>

<script src="~/export/buttons.html5.min.js"></script>
<script src="~/export/buttons.print.min.js"></script>
<script src="~/export/dataTables.buttons.min.js"></script>
<script src="~/export/dataTables.tableTools.min.js"></script>
<script src="~/export/jszip.min.js"></script>
<script src="~/export/pdfmake.min.js"></script>
<script src="~/export/vfs_fonts.js"></script>

@if (TempData["Sucesso"] != null)
{
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            NotificaoSucesso('@Html.Raw((string)TempData["Sucesso"])');
        });
    </script>
}
@if (TempData["Aviso"] != null)
{
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            NotificaoAviso('@Html.Raw((string)TempData["Aviso"])');
        });
    </script>
}
@if (TempData["Erro"] != null)
{
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            NotificaoErro('@Html.Raw((string)TempData["Erro"])');
        });
    </script>
}


<div class="panel panel-default">
    <div class="panel-heading">
        <a data-toggle="modal" data-target="#"><i class="fa fa-dollar-sign fa-fw"></i> Estorno</a>
        @*@if (VerificarPerfil.Validar("Simposio/Propositura/Create") && (@Session.Get("Simposio.Models.Simposio", "Simposio/SimposioAtivo").DataInicioPropositura < DateTime.Now) && (@Session.Get("Simposio.Models.Simposio", "Simposio/SimposioAtivo").DataFimPropositura > DateTime.Now))
            {*@
    </div>

    <div class="panel-body">
        <div class="table-responsive">

            <table class="table table-striped table-bordered" style="width:100%" id="tbInscricao">
                <thead>
                    <tr>

                        <th>
                            Nome
                        </th>

                        <th>
                            Etapa
                        </th>
                        <th>
                            Modalidade
                        </th>
                        <th>
                            Valor Original
                        </th>
                        <th>
                            Percentual Est.
                        </th>
                        <th>
                            Valor Final
                        </th>
                        <th>
                            Opções
                        </th>

                    </tr>
                </thead>
                @if (Model.Count() > 1)
                {
                    <tfoot style="display: table-header-group;">
                        <tr style="background:#f5f5f5;">
                            <th>
                            </th>
                            <th>
                            </th>
                            <th>
                            </th>
                            <th>
                            </th>
                            <th>
                            </th>
                            <th>
                            </th>
                            <th>
                            </th>
                        </tr>
                    </tfoot>
                }
                <tbody>
                    @{
                        if (Model != null)
                        {
                            foreach (var item in Model)
                            {
                                <tr class="odd gradeX">

                                    <td style="vertical-align:middle">
                                        @Html.DisplayFor(modelItem => item.Pessoa.Pessoa.Nome)
                                    </td>
                                    <td style="vertical-align:middle">
                                        @Html.DisplayFor(modelItem => item.DescEtapa)
                                    </td>
                                    <td style="vertical-align:middle">
                                        @Html.DisplayFor(modelItem => item.DescModalidade)
                                    </td>
                                    <td style="vertical-align:middle">
                                        @Html.DisplayFor(modelItem => item.ValorFormatado)
                                    </td>
                                    <td style="vertical-align:middle">
                                        @{ if (item.PercentualEstorno != null && Convert.ToDouble(item.PercentualEstorno) > 0)
                                            {
                                                @Html.DisplayFor(modelItem => item.PercentualEstorno)<span>%</span>;
                                            }
                                            else
                                            {
                                                <span>0%</span>
                                            }
                                        }
                                    </td>
                                    <td style="vertical-align:middle">
                                        @Html.DisplayFor(modelItem => item.ValorFinalFormatado)
                                    </td>
                                    <td style="text-align:center; vertical-align:middle">
                                        <div class="dropup">

                                            <button class="btn btn-default dropdown-toggle" id="btnOpcoes" type="button" data-toggle="dropdown" style="margin:-5px; padding-top:2%; padding-bottom:2%">
                                                Opções
                                                <span class="caret"></span>
                                            </button>

                                            <ul class="dropdown-menu dropdown-menu-right">
                                                <li>
                                                    <a href="#" onclick="InserirEstorno(@item.CodInscricaoCategoria)">
                                                        <span class="fa fa-share fa-fw"></span> Estorno
                                                    </a>
                                                </li>
                                                @{ if (item.PercentualEstorno != null && Convert.ToDouble(item.PercentualEstorno) > 0)
                                                    {

                                                        <li>
                                                            <a href="#" onclick="EmitirAutorizacao(@item.CodInscricaoCategoria)">
                                                                <span class="fa fa-envelope-open-text fa-fw"></span> Emitir Autorização
                                                            </a>
                                                        </li>

                                                    }
                                                }
                                            </ul>
                                            

                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    }
                </tbody>
                <tfoot style="display: table-header-group;">
                    <tr style="background:#f5f5f5;">
                        <th colspan="7" id="tablefooter" class="text-right" style="font-weight: normal;">
                        </th>
                    </tr>
                </tfoot>
            </table>
        </div>


    </div>
</div>

<div class="modal fade" id="ModalInserirEstorno" tabindex="-1" role="dialog" aria-hidden="true">

    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div style="color: white; background-color: #004077; font-weight:bold; border-top-left-radius:inherit; border-top-right-radius:inherit" class="modal-header">
                <button type="button" class="close text" style="color:white !important; opacity:1" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="exampleModalLabel">Histórico de estorno</h4>
            </div>
            <div id="PartialInserirEstorno">

            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ModalHistoricoEstorno" tabindex="-1" role="dialog" aria-hidden="true">

    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div style="color: white; background-color: #004077; font-weight:bold; border-top-left-radius:inherit; border-top-right-radius:inherit" class="modal-header">
                <button type="button" class="close text" style="color:white !important; opacity:1" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="exampleModalLabel">Estorno por inscrição</h4>
            </div>
            <div id="PartialHistoricoEstorno">

            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('#tbInscricao').DataTable(
            {
                "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "Todos"]],
                dom: 'lBfrtip',
                buttons: ['excel', 'pdf', { extend: 'print', text: 'Imprimir' }],
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api(), data;

                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[\R$.]/g, '').replace(/[\,]/g, '.') * 1 :
                            typeof i === 'number' ?
                                i : 0;
                    };

                    // Total over all pages
                    total = api
                        .column(5)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Total over this page
                    pageTotal = api
                        .column(5, { page: 'current' })
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Update footer
                    if (pageTotal === total) {
                        $("#tablefooter").html(
                            'Total: <b>R$ ' + mascaraValor(total.toFixed(2)) + '</b>');
                    }
                    else {
                        $("#tablefooter").html(
                            ' Subtotal:<b> R$ ' + mascaraValor(pageTotal.toFixed(2)) + '</b> | Total: <b>R$ ' + mascaraValor(total.toFixed(2)) + '</b>');
                    }

                },
                initComplete: function () {
                    this.api().columns([1, 2]).every(function () {
                        var column = this;
                        var select = $('<select style="width:100%"><option value="">Todos</option></select>')
                            .appendTo($(column.footer()).empty())
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );
                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });
                        column.data().unique().sort().each(function (d, j) {
                            if (d !== '') {
                                var val = $('<div/>').html(d).text();
                                select.append('<option value="' + val + '">' + val + '</option>');
                            }
                        });
                    });
                },
                "order": [[4, "desc"], [0, "asc"]],
                columnDefs: [{
                    'targets': [],
                    'visible': false,
                    'searchable': false
                },
                {
                    targets: 1,
                    render: function (data, type, row) {
                        return data.length > 70 ?
                            data.substr(0, 70) + '…' :
                            data;
                    }
                }
                ],
                responsive: true,
                language: {
                    processing: "Processando...",
                    search: "Procurar:",
                    lengthMenu: "Mostrar _MENU_ registros",
                    info: "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                    infoEmpty: "Mostrando de 0 até 0 de 0 registros",
                    infoFiltered: "(filtrado de _MAX_ registros no total)",
                    infoPostFix: "",
                    loadingRecords: "Carregando registros...",
                    zeroRecords: "Não foi encontrado nenhum resultado",
                    emptyTable: "Não há nenhum dado disponível na tabela",
                    paginate: {
                        first: "Primeiro",
                        previous: "Anterior",
                        next: "Próximo",
                        last: "Último"
                    },
                    aria: {
                        sortAscending: ": Ordenar colunas de forma ascendente",
                        sortDescending: ": Ordenar colunas de forma descendente"
                    }

                }
            });
    });
    function InserirEstorno(val) {
        var url = '@Url.Action("InserirEstorno", "Financeiro", new { CodInscricaoCategoria = "Codigo" })'.replace("Codigo", val);
        console.log(url);
        $.ajax({
            url: url,
            type: 'POST',
            success: function (result) {
                $('#PartialInserirEstorno').html(result);
                $('#ModalInserirEstorno').modal('show');
            },
            error: function (xhr, status) {
                NotificaoErro("Ocorreu um erro inesperado. Tente novamente, se o erro persistir entre em contato com nosso suporte.");
            }
        });
    }
    function mascaraValor(valor) {
        valor = valor.toString().replace(/\D/g, "");
        valor = valor.toString().replace(/(\d)(\d{8})$/, "$1.$2");
        valor = valor.toString().replace(/(\d)(\d{5})$/, "$1.$2");
        valor = valor.toString().replace(/(\d)(\d{2})$/, "$1,$2");
        return valor
    }
    function EmitirAutorizacao(val) {
        var url = '@Url.Action("HistoricoEstorno", "Financeiro", new { CodInscricaoCategoria = "Codigo" })'.replace("Codigo", val);
        console.log(url);
        $.ajax({
            url: url,
            type: 'POST',
            success: function (result) {
                $('#PartialHistoricoEstorno').html(result);
                $('#ModalHistoricoEstorno').modal('show');
            },
            error: function (xhr, status) {
                NotificaoErro("Ocorreu um erro inesperado. Tente novamente, se o erro persistir entre em contato com nosso suporte.");
            }
        });
          @*var iframe = document.getElementById("iVisualizador");
        iframe.src = '@Url.Action("HistoricoEstorno", "Financeiro", new { CodInscricaoCategoria = "Codigo" })'.replace("Codigo", CodInscricaoCategoria);
          $('#ModalVisualizador').modal({ backdrop: 'static', keyboard: false });
          $('#loadingModal').show();
          $('#iVisualizador').hide();*@
    }

    function ImpressaoAutorizacao(InscricaoCategoria, Estorno) {
        console.log(Estorno);
        var iframe = document.getElementById("iVisualizador");
        iframe.src = '@Url.Action("ImpressaoAutorizacao", "Financeiro", new { CodInscricaoCategoria = "c1",CodEstorno="c2"})'.replace("c1", InscricaoCategoria).replace("c2", Estorno).replace(/&amp;/g, "&");
          $('#ModalVisualizador').modal({ backdrop: 'static', keyboard: false });
          $('#loadingModal').show();
          $('#iVisualizador').hide();
    }

    function ImpressaoAutorizacaoJsReport(InscricaoCategoria, Estorno) {
        window.open('@Url.Action("ImpressaoAutorizacaoJsReport", "Financeiro", new { CodInscricaoCategoria = "c1",CodEstorno="c2"})'.replace("c1", InscricaoCategoria).replace("c2", Estorno).replace(/&amp;/g, "&"));
    }

</script>
