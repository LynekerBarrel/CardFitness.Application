@model AdmSimposio.Models.InfoSimposio
@*<script src="~/vendor/jquery/jquery.min.js"></script>
    <script src="~/vendor/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/vendor/datatables/js/dataTables.bootstrap.min.js"></script>
    <script type="text/javascript" src="dataTables.numericComma.js"></script>

    <script src="~/export/buttons.html5.min.js"></script>
    <script src="~/export/buttons.print.min.js"></script>
    <script src="~/export/dataTables.buttons.min.js"></script>
    <script src="~/export/dataTables.tableTools.min.js"></script>
    <script src="~/export/jszip.min.js"></script>
    <script src="~/export/pdfmake.min.js"></script>
    <script src="~/export/vfs_fonts.js"></script>

    <script src="~/chart/Chart.bundle.js"></script>
    <script src="~/chart/Chart.js"></script>*@


<script src="https://cloud.tinymce.com/5/tinymce.min.js?apiKey=bf2t67avjifztkq3p9e3oz7svd184b0jc8t5i9p6lro7zjnq"></script>


@if (TempData["Sucesso"] != null)
{
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            NotificaoSucesso('@Html.Raw((string)TempData["Sucesso"])');
        });
    </script>
}
@if (TempData["Aviso"] != null)
{
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            NotificaoAviso('@Html.Raw((string)TempData["Aviso"])');
        });
    </script>
}
@if (TempData["Erro"] != null)
{
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            NotificaoErro('@Html.Raw((string)TempData["Erro"])');
        });
    </script>
}

@Html.HiddenFor(x => x.TotalInscritos)
@Html.HiddenFor(x => x.TotalTrabalhos)
@Html.HiddenFor(x => x.TotalAguardandoConfirmacao)
@Html.HiddenFor(x => x.TotalConfirmados)
@Html.HiddenFor(x => x.OuvinteInscritos)
@Html.HiddenFor(x => x.OuvinteInscritosAguardandoConfirmacao)
@Html.HiddenFor(x => x.OuvinteInscritosConfirmados)
@Html.HiddenFor(x => x.TrabalhosInscritos)
@Html.HiddenFor(x => x.TrabalhosInscritosAguardandoConfirmacao)
@Html.HiddenFor(x => x.TrabalhosInscritosConfirmados)

<div class="row" style="padding:30px 20px 0px 20px">
    <div class="col-sm-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="col-sm-6">
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Total de inscrições:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.TotalInscritos)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Aguardando confirmação:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.TotalAguardandoConfirmacao)
                        </div>

                    </div>
                    <hr style="margin: 0px 0px 5px 0px" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Confirmados:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.TotalConfirmados)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px; height:3px; border:none; color:#dfdfdf; background-color:#dfdfdf;" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Inscrições como ouvinte:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.OuvinteInscritos)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Ouvintes aguardando confirmação:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.OuvinteInscritosAguardandoConfirmacao)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Ouvintes confirmados:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.OuvinteInscritosConfirmados)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px; height:3px; border:none; color:#dfdfdf; background-color:#dfdfdf;" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Inscrições como apresentador:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.TrabalhosInscritos)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Apresentadores aguardando confirmação:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.TrabalhosInscritosAguardandoConfirmacao)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Apresentadores confirmados:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.TrabalhosInscritosConfirmados)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px; height:3px; border:none; color:#dfdfdf; background-color:#dfdfdf;" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Total de trabalhos:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.TotalTrabalhos)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Trabalhos aguardando confirmação:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.TrabalhosAguardandoConfirmacao)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Trabalhos confirmados:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.TrabalhosConfirmados)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px; height:3px; border:none; color:#dfdfdf; background-color:#dfdfdf;" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Total de inscrições incompletas:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.TotalInscricoesIncompletas)
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Trabalhos não enviados para avaliação:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.TrabalhosAguardandoEnvio)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Convites aguardando aceite:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.ConviteAguardando)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Aguardando parecer do avaliador:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.AvaliacaoAguardandoAvaliacao)
                        </div>
                    </div>

                    <hr style="margin: 0px 0px 5px 0px" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Avaliações aprovadas:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.AvaliacaoAprovada)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Avaliações reprovadas:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.AvaliacaoReprovada)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Avaliações com ressalvas:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.AvaliacaoComRessalva)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Avaliações aguardando comissão:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.AvaliacaoAguardandoComissão)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px" />
                    <div class="row">
                        <div class="col-sm-10">
                            <label class="form-label-group">Avaliações expiradas:</label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DisplayFor(x => x.AvaliacaoExpirada)
                        </div>
                    </div>
                    <hr style="margin: 0px 0px 5px 0px; height:3px; border:none; color:#dfdfdf; background-color:#dfdfdf;" />
                    <canvas id="InscricaoTotal"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row" style="padding:0px 20px 20px 20px;">
    <div class="col-sm-6">
        <div class="panel panel-default">
            <div class="panel-body">
                @Html.HiddenFor(x => x.TotalInscritos)
                @Html.HiddenFor(x => x.TotalTrabalhos)
                @Html.HiddenFor(x => x.TotalAguardandoConfirmacao)
                @Html.HiddenFor(x => x.TotalConfirmados)
                @Html.HiddenFor(x => x.OuvinteInscritos)
                @Html.HiddenFor(x => x.OuvinteInscritosAguardandoConfirmacao)
                @Html.HiddenFor(x => x.OuvinteInscritosConfirmados)
                @Html.HiddenFor(x => x.TrabalhosInscritos)
                @Html.HiddenFor(x => x.TrabalhosInscritosAguardandoConfirmacao)
                @Html.HiddenFor(x => x.TrabalhosInscritosConfirmados)
                <canvas id="InscricaoOuvinte"></canvas>
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <div class="panel panel-default">
            <div class="panel-body">
                <canvas id="InscricaoTrabalho"></canvas>
            </div>
        </div>
    </div>
</div>
<div class="row" style="padding: 0px 20px 0px 20px">
    <div class="col-sm-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <a href="#"><i class="fa fa-chart-line fa-fw"></i> Relatório de inscrições</a>
                <div style="float:right">
                    <a href="#/" onclick="LoadEmail()"><i class="fa fa-paper-plane fa-fw"></i> Email - Aguardando Confirmação</a> 
                    <a href="#/" onclick="LoadEmailConfirmados()"> | Email - Confirmados</a>
                </div>
               
            </div>
            <div class="panel-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered" style="width:100%" id="tbInscricao">
                        <thead>
                            <tr>
                                <th>
                                    Nome
                                </th>
                                <th>
                                    Curso
                                </th>
                                <th>
                                    Categoria
                                </th>
                                <th>
                                    Etapa
                                </th>
                                <th>
                                    Modalidade
                                </th>
                                <th>
                                    Situação
                                </th>
                                <th>
                                    Valor
                                </th>
                            </tr>
                        </thead>
                        @if (Model.InscricaoCategoriaModeloRelatorio.Count() > 1)
                        {
                            <tfoot style="display: table-header-group;">
                                <tr style="background:#f5f5f5;">
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </tfoot>
                        }
                        <tbody>
                            @{
                                if (Model != null)
                                {
                                    foreach (var item in Model.InscricaoCategoriaModeloRelatorio)
                                    {
                                        <tr class="odd gradeX">

                                            <td style="vertical-align:middle">
                                                @Html.DisplayFor(modelItem => item.Pessoa.Pessoa.Nome)
                                            </td>
                                            <td style="vertical-align:middle">
                                                @if (item.Curso != null)
                                                {
                                                    @Html.DisplayFor(modelItem => item.Curso.DescCurso)
                                                }
                                                else
                                                {
                                                    <span>Não Informado</span>
                                                }
                                            </td>
                                            <td style="vertical-align:middle">
                                                @Html.DisplayFor(modelItem => item.DescCategoria)
                                            </td>
                                            <td style="vertical-align:middle">
                                                @Html.DisplayFor(modelItem => item.DescEtapa)
                                            </td>
                                            <td style="vertical-align:middle">
                                                @Html.DisplayFor(modelItem => item.DescModalidade)
                                            </td>
                                            <td style="text-align:center; vertical-align:middle">
                                                @if (item.CodSituacaoInscricao == 3)
                                                {
                                                    <span class="label label-success" style="font-weight:lighter; text-align:center; font-size:85%; padding-top:4px">@item.DescSituacao</span>
                                                }
                                                else
                                                {
                                                    <span class="label label-info" style="font-weight:lighter; font-size:85%; padding-top:4px">@item.DescSituacao</span>
                                                }
                                            </td>
                                            <td style="vertical-align:middle">
                                                @Html.DisplayFor(modelItem => item.ValorFinalFormatado)
                                            </td>

                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                        <tfoot style="display: table-header-group;">
                            <tr style="background:#f5f5f5;">

                                <th colspan="7" id="tablefooter" class="text-right" style="font-weight: normal;">

                                </th>


                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalEmail" tabindex="-1" role="dialog" aria-labelledby="ModalEmail" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div style="color: white; background-color: #004077; font-weight:bold; border-top-left-radius:inherit; border-top-right-radius:inherit" class="modal-header">
                <button type="button" class="close text" style="color:white !important; opacity:1" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="exampleModalLabel">Enviar e-mail - Participantes</h4>
            </div>
            <div id="PartialEmail"></div>
        </div>
    </div>
</div>


<script>

    var InscTotal = document.getElementById('InscricaoTotal');
    var InscTrabalho = document.getElementById('InscricaoTrabalho');
    var InscOuvinte = document.getElementById('InscricaoOuvinte');
    var InscricaoTotal = new Chart(InscTotal, {
        type: 'doughnut',
        data: {
            labels: ['Confirmadas', 'Aguardando Confirmação'],
            datasets: [{
                label: '# of Votes',
                data: [$("#TotalConfirmados").val(), $("#TotalAguardandoConfirmacao").val()],
                backgroundColor: [
                    '#5cb85c',
                    '#337ab7'
                ],
                borderColor: [
                    '#376a37',
                    '#2e6da4'
                ],
                borderWidth: 1
            }]
        },
        options: {
            title: {
                display: true,
                text: 'Total de inscrições no simpósio: ' + $("#TotalInscritos").val()
            },
            legend: {
                display: true,
                position: 'right'
            }
        }
    });

    var InscricaoTrabalho = new Chart(InscTrabalho, {
        type: 'doughnut',
        data: {
            labels: ['Confirmadas', 'Aguardando Confirmação'],
            datasets: [{
                label: '# of Votes',
                data: [$("#TrabalhosInscritosConfirmados").val(), $("#TrabalhosInscritosAguardandoConfirmacao").val()],
                backgroundColor: [
                    '#5cb85c',
                    '#337ab7'
                ],
                borderColor: [
                    '#376a37',
                    '#2e6da4'
                ],
                borderWidth: 1
            }]
        },
        options: {
            title: {
                display: true,
                text: 'Inscrições como Apresentador: ' + $("#TrabalhosInscritos").val()
            },
            legend: {
                display: true,
                position: 'right'
            }
        }
    });

    var InscricaoOuvinte = new Chart(InscOuvinte, {
        type: 'doughnut',
        data: {
            labels: ['Confirmadas', 'Aguardando Confirmação'],
            datasets: [{
                label: '# of Votes',
                data: [$("#OuvinteInscritosConfirmados").val(), $("#OuvinteInscritosAguardandoConfirmacao").val()],
                backgroundColor: [
                    '#5cb85c',
                    '#337ab7'
                ],
                borderColor: [
                    '#376a37',
                    '#2e6da4'
                ],
                borderWidth: 1
            }]
        },
        options: {
            title: {
                display: true,
                text: 'Inscrições como Ouvinte: ' + $("#OuvinteInscritos").val()
            },
            legend: {
                display: true,
                position: 'right'
            }
        }
    });

    $(document).ready(function () {
        $('#tbInscricao').DataTable(
            {
                "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "Todos"]],
                dom: 'lBfrtip',
                buttons: ['excel', 'pdf', { extend: 'print', text: 'Imprimir' }],
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api(), data;

                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[\R$.]/g, '').replace(/[\,]/g, '.') * 1 :
                            typeof i === 'number' ?
                                i : 0;
                    };

                    // Total over all pages
                    total = api
                        .column(6)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Total over this page
                    pageTotal = api
                        .column(6, { page: 'current' })
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Update footer
                    if (pageTotal === total) {
                        $("#tablefooter").html(
                            'Total: <b>R$ ' + mascaraValor(total.toFixed(2)) + '</b>');
                    }
                    else {
                        $("#tablefooter").html(
                            ' Subtotal:<b> R$ ' + mascaraValor(pageTotal.toFixed(2)) + '</b> | Total: <b>R$ ' + mascaraValor(total.toFixed(2)) + '</b>');
                    }

                },
                initComplete: function () {
                    this.api().columns([1, 2, 3, 4, 5]).every(function () {
                        var column = this;
                        var select = $('<select style="width:100%"><option value="">Todos</option></select>')
                            .appendTo($(column.footer()).empty())
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            if (d !== '') {
                                var val = $('<div/>').html(d).text();
                                select.append('<option value="' + val + '">' + val + '</option>');
                            }
                        });
                    });
                },
                "order": [[5, "asc"], [0, "desc"]],
                columnDefs: [{
                    'targets': [],
                    'visible': false,
                    'searchable': false
                },
                {
                    targets: 1,
                    render: function (data, type, row) {
                        return data.length > 70 ?
                            data.substr(0, 70) + '…' :
                            data;
                    }
                }
                ],
                responsive: true,
                language: {
                    processing: "Processando...",
                    search: "Procurar:",
                    lengthMenu: "Mostrar _MENU_ registros",
                    info: "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                    infoEmpty: "Mostrando de 0 até 0 de 0 registros",
                    infoFiltered: "(filtrado de _MAX_ registros no total)",
                    infoPostFix: "",
                    loadingRecords: "Carregando registros...",
                    zeroRecords: "Não foi encontrado nenhum resultado",
                    emptyTable: "Não há nenhum dado disponível na tabela",
                    paginate: {
                        first: "Primeiro",
                        previous: "Anterior",
                        next: "Próximo",
                        last: "Último"
                    },
                    aria: {
                        sortAscending: ": Ordenar colunas de forma ascendente",
                        sortDescending: ": Ordenar colunas de forma descendente"
                    }

                }
            });
    });

    function mascaraValor(valor) {
        valor = valor.toString().replace(/\D/g, "");
        valor = valor.toString().replace(/(\d)(\d{8})$/, "$1.$2");
        valor = valor.toString().replace(/(\d)(\d{5})$/, "$1.$2");
        valor = valor.toString().replace(/(\d)(\d{2})$/, "$1,$2");
        return valor
    }

    function IncializarTinyMCE() {
        tinymce.init({
            selector: '#CorpoEmailEnviar',
            height: 300,
            menubar: false,
            plugins: [
                'advlist autolink lists link image charmap print preview anchor textcolor',
                'searchreplace visualblocks code fullscreen',
                'insertdatetime media table paste code help wordcount'
            ],
            toolbar: 'undo redo | formatselect | bold italic underline strikethrough forecolor backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link removeformat |'
        });
    }
    

    function LoadEmail() {
        var url = '@Url.Action("LoadEmail", "Home")';
        $.ajax({
            url: url,
            type: 'POST',
            success: function (result) {
                if (result.erro) {
                    NotificaoAviso(result.message);
                }
                else {
                    $('#PartialEmail').html(result);
                    $("#ModalEmail").modal({ backdrop: 'static', keyboard: false });
                    if (tinymce.editors.length > 0) { //Necessário limpar caso ja tiver inicializado antes, assim o componente renderiza normalmente caso aberto após cancelar modal antes
                        tinymce.execCommand('mceFocus', true, "CorpoEmailEnviar");
                        tinymce.execCommand('mceRemoveEditor', true, "CorpoEmailEnviar");
                        tinymce.execCommand('mceAddEditor', true, "CorpoEmailEnviar");
                    }
                    else {
                        IncializarTinyMCE();
                    }
                }
            },
            error: function (xhr, status) {
                NotificaoErro("Ocorreu uma inconsistência no sistema, entre em contato com suporte.");
            }
        });
    }

    function LoadEmailConfirmados() {
        var url = '@Url.Action("LoadEmailConfirmados", "Home")';
        $.ajax({
            url: url,
            type: 'POST',
            success: function (result) {
                if (result.erro) {
                    NotificaoAviso(result.message);
                }
                else {
                    $('#PartialEmail').html(result);
                    $("#ModalEmail").modal({ backdrop: 'static', keyboard: false });
                    if (tinymce.editors.length > 0) { //Necessário limpar caso ja tiver inicializado antes, assim o componente renderiza normalmente caso aberto após cancelar modal antes
                        tinymce.execCommand('mceFocus', true, "CorpoEmailEnviar");
                        tinymce.execCommand('mceRemoveEditor', true, "CorpoEmailEnviar");
                        tinymce.execCommand('mceAddEditor', true, "CorpoEmailEnviar");
                    }
                    else {
                        IncializarTinyMCE();
                    }
                }
            },
            error: function (xhr, status) {
                NotificaoErro("Ocorreu uma inconsistência no sistema, entre em contato com suporte.");
            }
        });
    }
</script>
