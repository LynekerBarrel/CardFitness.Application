@model AdmSimposio.Models.ListaPresenca
@using AdmSimposio.CrossCutting

@if (TempData["Sucesso"] != null)
{
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            NotificaoSucesso('@Html.Raw((string)TempData["Sucesso"])');
        });
    </script>
}
@if (TempData["Aviso"] != null)
{
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            NotificaoAviso('@Html.Raw((string)TempData["Aviso"])');
        });
    </script>
}
@if (TempData["Erro"] != null)
{
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            NotificaoErro('@Html.Raw((string)TempData["Erro"])');
        });
    </script>
}


<div class="panel panel-default">
    <div class="panel-heading">
        <a><i class="fa fa-print fa-fw"></i> Adicionar trabalhos a Lista de Presença</a>
        <div style="float:right">
            <a href="@Url.Action("Index", "ListaPresenca", new { Ambiente = "ListaPresencaConfigurar"})"> <i class="fa fa-arrow-left fa-fw"></i>Voltar</a>
        </div>
    </div>
    <div class="panel-body">
        <div class="panel panel-default">
            <div class="panel-body">
                <p style="margin-bottom:2px"><b>Local:</b> @Model.Local </p>
                <p style="margin-bottom:2px"><b>Data: </b> @Model.DataInicial.ToString("dd/MM/yyyy")</p>
                <p style="margin-bottom:15px"><b>Horário: </b> @Model.DataInicial.ToString("HH:mm") às @Model.DataFinal.ToString("HH:mm")</p>

                <p style="margin-bottom:2px"><b>Adicionar trabalhos selecionados</b></p>
                <a href="#" onclick="AdicionarNaListaEmLote(@Model.CodListaPresenca)" class="btn btn-success">Adicionar em lote</a>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-striped table-bordered" style="width:100%" id="tbTrabalhoParaLista">
                <thead>
                    <tr>
                        <th style="text-align:center"><input type="checkbox" name="select_all" value="1" id="tbTrabalhoParaLista-select-all"></th>
                        <th>
                            Título Trabalho
                        </th>
                        <th>
                            Sessão Temática
                        </th>
                        <th>
                            Modalidade
                        </th>
                        <th>
                            Ordem
                        </th>
                        <th>
                            Situação
                        </th>

                        <th>
                            Local
                        </th>
                        <th>
                            Opções
                        </th>
                    </tr>
                </thead>
                @if (Model.Trabalhos.Count() > 1)
                {
                    <tfoot style="display: table-header-group;">
                        <tr style="background:#f5f5f5;">
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                    </tfoot>
                }
                <tbody>
                    @{
                        if (Model.Trabalhos != null && Model.Trabalhos.Count() > 0)
                        {
                            @Html.HiddenFor(x => Model.CodListaPresenca)

                            foreach (var item in Model.Trabalhos)
                            {
                                @Html.HiddenFor(x => item.CodTrabalho)
                                <tr class="odd gradeX">
                                    <td style="text-align:center; vertical-align:middle">
                                        @if (string.IsNullOrEmpty(item.TituloListaPresenca))
                                        {
                                            <input type="checkbox" name="CodTrabalho" value="@item.CodTrabalho" />
                                        }
                                        else
                                        {
                                            <input type="checkbox" disabled name="Disabilitado" />
                                        }
                                    </td>
                                    <td style="vertical-align:middle">
                                        @Html.DisplayFor(modelItem => item.Titulo)
                                    </td>
                                    <td style="vertical-align:middle">
                                        @Html.DisplayFor(modelItem => item.TituloSimposioTematico)
                                    </td>
                                    <td style="vertical-align:middle">
                                        @Html.DisplayFor(modelItem => item.DescModalidade)
                                    </td>
                                    <td style="vertical-align:middle">
                                        @if (string.IsNullOrEmpty(item.TituloListaPresenca))
                                        {
                                            <span>0</span>
                                        }
                                        else if (item.TituloListaPresenca == Model.Local)
                                        {
                                            <span>1</span>
                                        }
                                        else if (item.TituloListaPresenca != Model.Local)
                                        {
                                            <span>2</span>
                                        }
                                    </td>
                                    <td style="vertical-align:middle">
                                        @if (string.IsNullOrEmpty(item.TituloListaPresenca))
                                        {
                                            <span>Disponível</span>
                                        }
                                        else if (item.TituloListaPresenca == Model.Local)
                                        {
                                            <span>Nesta lista</span>
                                        }
                                        else if (item.TituloListaPresenca != Model.Local)
                                        {
                                            <span>Noutra lista</span>
                                        }
                                    </td>
                                    <td style="vertical-align:middle">
                                        @if (!string.IsNullOrEmpty(item.TituloListaPresenca))
                                        {
                                            @Html.DisplayFor(modelItem => item.TituloListaPresenca)
                                        }
                                    </td>
                                    <td style="text-align:center; vertical-align:middle">
                                        <div class="dropup">
                                            <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" style="margin:-5px; padding-top:2%; padding-bottom:2%">
                                                Opções
                                                <span class="caret"></span>
                                            </button>
                                            <ul class="dropdown-menu dropdown-menu-right">
                                                @if (string.IsNullOrEmpty(item.TituloListaPresenca))
                                                {
                                                    <li>
                                                        <a disabled href="#" onclick="AdicionarNaLista(@item.CodTrabalho, @Model.CodListaPresenca)">
                                                            <span class="fa fa-plus-circle fa-fw"></span> Adicionar na Lista
                                                        </a>
                                                    </li>
                                                }
                                                else
                                                {
                                                    <li>
                                                        <a disabled href="#" onclick="RemoverDaLista(@item.CodTrabalho, @item.CodListaPresenca)">
                                                            <span class="fa fa-minus-circle fa-fw"></span> Remover da Lista
                                                        </a>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


<div class="modal fade" id="ModalAdicionarNaLista" tabindex="-1" role="dialog" aria-labelledby="ModalEmail" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div style="color: white; background-color: #004077; font-weight:bold; border-top-left-radius:inherit; border-top-right-radius:inherit" class="modal-header">
                <button type="button" class="close text" style="color:white !important; opacity:1" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="exampleModalLabel">Adicionar Trabalho</h4>
            </div>
            <div class="modal-body">
                <div id="PartialAdicionarNaLista"></div>
            </div>
        </div>
    </div>
</div>


<script>
    document.title = 'Adm Simpósio - Adicionar trabalho a lista de presença';

    function RemoverDaLista(ValTrab, ValLista) {
        if (ConfirmarOnClick("Deseja realmente remover este trabalho da lista de presença?")) {
            $('#PartialIndex').hide();
            $('.panel-loading').show();
            var url = '@Url.Action("RemoverDaLista", "ListaPresenca", new { CodTrabalho = "CodigoTrabalho", CodListaPresenca = "CodigoListaPresenca" })'.replace("CodigoTrabalho", ValTrab).replace("CodigoListaPresenca", ValLista).replace("&amp;", "&");
            $.ajax({
                url: url,
                type: 'POST',
                success: function (result) {
                    location.reload(true);
                },
                error: function (xhr, status) {
                    NotificaoErro("Ocorreu um erro inesperado. Tente novamente, se o erro persistir entre em contato com nosso suporte.");
                }
            });
        }
        else {
            NotificaoAviso("Ação de exclusão cancelada.");
        }
    }


    function AdicionarNaLista(ValTrab, ValLista) {
        if (ConfirmarOnClick("Deseja realmente adicionar este trabalho na lista de presença?")) {
            $('#PartialIndex').hide();
            $('.panel-loading').show();
            var url = '@Url.Action("AdicionarNaLista", "ListaPresenca", new { CodTrabalho = "CodigoTrabalho", CodListaPresenca = "CodigoListaPresenca" })'.replace("CodigoTrabalho", ValTrab).replace("CodigoListaPresenca", ValLista).replace("&amp;", "&");
            $.ajax({
                url: url,
                type: 'POST',
                success: function (result) {
                    location.reload(true);
                },
                error: function (xhr, status) {
                    NotificaoErro("Ocorreu um erro inesperado. Tente novamente, se o erro persistir entre em contato com nosso suporte.");
                }
            });
        }
    }

    function AdicionarNaListaEmLote(ValLista) {
        if (ConfirmarOnClick("Deseja realmente adicionar todos estes trabalhos selecionados na lista de presença?")) {
            $('#PartialIndex').hide();
            $('.panel-loading').show();
            var oTable = $("#tbTrabalhoParaLista").dataTable();
            var sData = $('input', oTable.fnGetNodes()).serialize();
            var url = '@Url.Action("AdicionarNaListaEmLote", "ListaPresenca", new { CodListaPresenca = "CodigoListaPresenca" })'.replace("CodigoListaPresenca", ValLista);
            $.ajax({
                url: url,
                type: 'POST',
                data: sData,
                success: function (result) {
                    if (result.erro) {
                        $('#PartialIndex').show();
                        $('.panel-loading').hide();
                        NotificaoAviso(result.message);
                    }
                    else {
                        location.reload(true);
                    }
                },
                error: function (xhr, status) {
                    NotificaoErro("Ocorreu um erro inesperado. Tente novamente, se o erro persistir entre em contato com nosso suporte.");
                }
            });
        }
    }


    function DownloadTrabalho(CodTrabalho, FormatoExportacao) {
        $('#PartialIndex').hide();
        $('.panel-loading').show();
        var url = '@Url.Action("DownloadTrabalho", "Avaliacao", new { CodTrabalho = "CodigoTrabalho", FormatoExportacao = "docx" })'.replace("CodigoTrabalho", CodTrabalho).replace("&amp;", "&");
        $.ajax({
            url: url,
            type: 'POST',
            success: function (result) {
                $('.panel-loading').hide();
                $('#PartialIndex').show();
                window.open(result.linkRedirect)
                NotificaoSucesso(result.message);
            },
            error: function (xhr, status) {
                NotificaoErro("Ocorreu um erro inesperado. Tente novamente, se o erro persistir entre em contato com nosso suporte.");
            }
        });
    }

    $(document).ready(function () {
        var table = $('#tbTrabalhoParaLista').DataTable({
            initComplete: function () {
                this.api().columns([ 2 , 3, 5 ]).every(function () {
                    var column = this;
                    var select = $('<select style="width:100%"><option value=""></option></select>')
                        .appendTo($(column.footer()).empty())
                        .on('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? '^' + val + '$' : '', true, false)
                                .draw();
                        });

                    column.data().unique().sort().each(function (d, j) {
                        var val = $('<div/>').html(d).text();
                        select.append('<option value="' + val + '">' + val + '</option>');
                    });
                });
            },
            "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "Todos"]],
            "pageLength": 25,
            "order": [[4, "asc"],[2, "asc"]],
            columnDefs: [
                { "width": "30%", "targets": 2 },
                {
                    'targets': [4],
                    'visible': false,
                    'searchable': true
                }
            ],
            responsive: true,
            language: {
                processing: "Processando...",
                search: "Procurar:",
                lengthMenu: "Mostrar _MENU_ registros",
                info: "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                infoEmpty: "Mostrando de 0 até 0 de 0 registros",
                infoFiltered: "(filtrado de _MAX_ registros no total)",
                infoPostFix: "",
                loadingRecords: "Carregando registros...",
                zeroRecords: "Não foi encontrado nenhum resultado",
                emptyTable: "Não há nenhum dado disponível na tabela",
                paginate: {
                    first: "Primeiro",
                    previous: "Anterior",
                    next: "Próximo",
                    last: "Último"
                },
                aria: {
                    sortAscending: ": Ordenar colunas de forma ascendente",
                    sortDescending: ": Ordenar colunas de forma descendente"
                }

            }
        });

        // Handle click on "Select all" control
        $('#tbTrabalhoParaLista-select-all').on('click', function () {
            // Get all rows with search applied
            var rows = table.rows({ 'search': 'applied' }).nodes();
            // Check/uncheck checkboxes for all rows in the table
            $('input[type="checkbox"][name="CodTrabalho"]', rows).prop('checked', this.checked);
        });

        // Handle click on checkbox to set state of "Select all" control
        $('#tbTrabalhoParaLista tbody').on('change', 'input[type="checkbox"]', function () {
            // If checkbox is not checked
            if (!this.checked) {
                var el = $('#tbTrabalhoParaLista-select-all').get(0);
                // If "Select all" control is checked and has 'indeterminate' property
                if (el && el.checked && ('indeterminate' in el)) {
                    // Set visual state of "Select all" control
                    // as 'indeterminate'
                    el.indeterminate = true;
                }
            }
        });

        // Handle form submission event
        $('#frm-tbTrabalhoParaLista').on('submit', function (e) {
            var form = this;

            // Iterate over all checkboxes in the table
            table.$('input[type="checkbox"]').each(function () {
                // If checkbox doesn't exist in DOM
                if (!$.contains(document, this)) {
                    // If checkbox is checked
                    if (this.checked) {
                        // Create a hidden element
                        $(form).append(
                            $('<input>')
                                .attr('type', 'hidden')
                                .attr('name', this.name)
                                .val(this.value)
                        );
                    }
                }
            });
        });
    });

</script>
