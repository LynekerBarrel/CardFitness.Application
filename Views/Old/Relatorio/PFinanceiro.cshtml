@model AdmSimposio.Models.RelFinanceiro

<div class="panel panel-default">
    <div class="panel-body">
        <div class="col-sm-6">
            <div class="row">
                <div class="col-sm-7">
                    <label class="form-label-group">Total - Pago</label>
                </div>
                <div class="col-sm-5">
                    @Model.lInscricoes.FindAll(x=>x.CodSituacaoInscricao == 3).Count() | @Html.DisplayFor(x => x.TitulosPagosFormatado)
                </div>
            </div>
            <hr style="margin: 0px 0px 5px 0px" />
            <div class="row">
                <div class="col-sm-7">
                    <label class="form-label-group">Total - Não Pago</label>
                </div>
                <div class="col-sm-5">
                    @Model.lInscricoes.FindAll(x => x.CodSituacaoInscricao == 1).Count() | @Html.DisplayFor(x => x.TitulosNaoPagosFormatado)
                </div>
            </div>
            <hr style="margin: 0px 0px 5px 0px; height:3px; border:none; color:#dfdfdf; background-color:#dfdfdf;" />
            <div class="row">
                <div class="col-sm-7">
                    <label class="form-label-group">Quantidade total de inscrições:</label>
                </div>
                <div class="col-sm-5">
                    @Model.lInscricoes.Count()
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="row">
                <div class="col-sm-7">
                    <label class="form-label-group">Apresentador de Trabalho - Pago</label>
                </div>
                <div class="col-sm-5">
                    @Model.lInscricoes.FindAll(x => x.CodSituacaoInscricao == 3 && x.Ouvinte == 0).Count() | @Html.DisplayFor(x => x.TotalApresentadorPagoFormatado)
                </div>
            </div>
            <hr style="margin: 0px 0px 5px 0px" />
            <div class="row">
                <div class="col-sm-7">
                    <label class="form-label-group">Apresentador de Trabalho - Não Pago</label>
                </div>
                <div class="col-sm-5">
                    @Model.lInscricoes.FindAll(x => x.CodSituacaoInscricao == 1 && x.Ouvinte == 0).Count() | @Html.DisplayFor(x => x.TotalApresentadorNaoPagoFormatado)
                </div>
            </div>
            <hr style="margin: 0px 0px 5px 0px; height:3px; border:none; color:#dfdfdf; background-color:#dfdfdf;" />
            <div class="row">
                <div class="col-sm-7">
                    <label class="form-label-group">Ouvinte - Pago</label>
                </div>
                <div class="col-sm-5">
                    @Model.lInscricoes.FindAll(x => x.CodSituacaoInscricao == 3 && x.Ouvinte == 1).Count() | @Html.DisplayFor(x => x.TotalOuvintePagoFormatado)
                </div>
            </div>
            <hr style="margin: 0px 0px 5px 0px" />
            <div class="row">
                <div class="col-sm-7">
                    <label class="form-label-group">Ouvinte - Não Pago</label>
                </div>
                <div class="col-sm-5">
                    @Model.lInscricoes.FindAll(x => x.CodSituacaoInscricao == 1 && x.Ouvinte == 1).Count() | @Html.DisplayFor(x => x.TotalOuvinteNaoPagoFormatado)
                </div>
            </div>
        </div>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-bordered" style="width:100%" id="tbFinanceiro">
        <thead>
            <tr>
                <th>
                    Nome
                </th>
                <th>
                    IES
                </th>
                <th>
                    Curso
                </th>
                <th>
                    Categoria
                </th>
                <th>
                    Modalidade
                </th>
                <th>
                    Situação
                </th>
                <th>
                    Valor
                </th>
            </tr>
        </thead>
        @if (Model.lInscricoes.Count() > 1)
        {
            <tfoot style="display: table-header-group;">
                <tr style="background:#f5f5f5;">
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </tfoot>
        }
        <tbody>
            @{
                if (Model != null)
                {
                    foreach (var item in Model.lInscricoes)
                    {
                        <tr class="odd gradeX">

                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.Pessoa.Pessoa.Nome)
                            </td>
                            <td style="vertical-align:middle">
                                @if (!string.IsNullOrEmpty(item.DescInstituicaoEnsino))
                                {
                                    @Html.DisplayFor(modelItem => item.DescInstituicaoEnsino)
                                }
                                else
                                {
                                    <span>Não Informado</span>
                                }
                            </td>
                            <td style="vertical-align:middle">
                                @if (item.Curso != null)
                                {
                                    @Html.DisplayFor(modelItem => item.Curso.DescCurso)
                                }
                                else
                                {
                                    <span>Não Informado</span>
                                }
                            </td>
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.DescCategoria)
                            </td>

                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.DescModalidade)
                            </td>
                            <td style="text-align:center; vertical-align:middle">
                                @if (item.CodSituacaoInscricao == 3)
                                {
                                    <span class="label label-success" style="font-weight:lighter; text-align:center; font-size:85%; padding-top:4px">@item.DescSituacao</span>
                                }
                                else
                                {
                                    <span class="label label-info" style="font-weight:lighter; font-size:85%; padding-top:4px">@item.DescSituacao</span>
                                }
                            </td>
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.ValorFinalFormatado)
                            </td>

                        </tr>
                    }
                }
            }
        </tbody>

    </table>
</div>

<script>
    $(document).ready(function () {
        $('#tbFinanceiro').DataTable(
            {
                "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "Todos"]],
                dom: 'lBfrtip',
                buttons: ['excel', 'pdf', { extend: 'print', text: 'Imprimir' }],
                initComplete: function () {
                    this.api().columns([1, 2, 3, 4, 5]).every(function () {
                        var column = this;
                        var select = $('<select style="width:100%"><option value="">Todos</option></select>')
                            .appendTo($(column.footer()).empty())
                            .on('change', function () {
                                var val = $.fn.dataTable.util.escapeRegex(
                                    $(this).val()
                                );

                                column
                                    .search(val ? '^' + val + '$' : '', true, false)
                                    .draw();
                            });

                        column.data().unique().sort().each(function (d, j) {
                            if (d !== '') {
                                var val = $('<div/>').html(d).text();
                                select.append('<option value="' + val + '">' + val + '</option>');
                            }
                        });
                    });
                },
                "order": [[5, "asc"], [0, "desc"]],
                responsive: true,
                language: {
                    processing: "Processando...",
                    search: "Procurar:",
                    lengthMenu: "Mostrar _MENU_ registros",
                    info: "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                    infoEmpty: "Mostrando de 0 até 0 de 0 registros",
                    infoFiltered: "(filtrado de _MAX_ registros no total)",
                    infoPostFix: "",
                    loadingRecords: "Carregando registros...",
                    zeroRecords: "Não foi encontrado nenhum resultado",
                    emptyTable: "Não há nenhum dado disponível na tabela",
                    paginate: {
                        first: "Primeiro",
                        previous: "Anterior",
                        next: "Próximo",
                        last: "Último"
                    },
                    aria: {
                        sortAscending: ": Ordenar colunas de forma ascendente",
                        sortDescending: ": Ordenar colunas de forma descendente"
                    }

                }
            });
    });
</script>
