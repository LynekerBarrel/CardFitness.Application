@model IEnumerable<AdmSimposio.Models.Trabalho>

<div class="table-responsive">
    <table class="table table-striped table-bordered" style="width:100%" id="tbTrabalhoPorCurso">
        <thead>
            <tr>
                <th>
                    Título
                </th>
                <th>
                    Autores
                </th>
                <th>
                    Curso
                </th>
                <th>
                    Situação
                </th>
            </tr>
        </thead>
        @if (Model.Count() > 1)
        {
            <tfoot style="display: table-header-group;">
                <tr style="background:#f5f5f5;">
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </tfoot>
        }
        <tbody>
            @{
                if (Model != null)
                {
                    foreach (var item in Model)
                    {
                        <tr class="odd gradeX">
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.Titulo)
                            </td>
                            <td style="vertical-align:middle">
                                @if (item.AutoresModelo != null && item.AutoresModelo.Count > 0)
                                {
                                    foreach (var itemAutor in item.AutoresModelo)
                                    {
                                        if (itemAutor != item.AutoresModelo.Last())
                                        {
                                            @Html.DisplayFor(modelItem => itemAutor.Nome)<span> | </span>
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(modelItem => itemAutor.Nome)
                                        }
                                    }
                                }
                            </td>
                            <td style="vertical-align:middle">
                                @if (!string.IsNullOrEmpty(item.DescCurso))
                                {
                                    @Html.DisplayFor(modelItem => item.DescCurso)
                                }
                                else
                                {
                                    <span>*Participante não é aluno da instituição</span>
                                }
                            </td>
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.DescSituacaoTrabalho)
                            </td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
</div>

<script>
    document.title = 'Adm Simpósio - Relatório de Trabalhos por IES';

    $(document).ready(function () {
        var table = $('#tbTrabalhoPorCurso').DataTable({
            dom: 'lBfrtip',
            buttons: ['excel', 'pdf', { extend: 'print', text: 'Imprimir' }],
            initComplete: function () {
                this.api().columns([2]).every(function () {
                    var column = this;
                    var select = $('<select style="width:100%"><option value=""></option></select>')
                        .appendTo($(column.footer()).empty())
                        .on('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? '^' + val + '$' : '', true, false)
                                .draw();
                        });

                    column.data().unique().sort().each(function (d, j) {
                        var val = $('<div/>').html(d).text();
                        select.append('<option value="' + val + '">' + val + '</option>');
                    });
                });
            },
            "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "Todos"]],
            "pageLength": 25,
            "order": [[0, "asc"]],
            columnDefs: [
                { "width": "30%", "targets": 0 },
                { "width": "27%", "targets": 2 }
            ],
            responsive: true,
            language: {
                processing: "Processando...",
                search: "Procurar:",
                lengthMenu: "Mostrar _MENU_ registros",
                info: "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                infoEmpty: "Mostrando de 0 até 0 de 0 registros",
                infoFiltered: "(filtrado de _MAX_ registros no total)",
                infoPostFix: "",
                loadingRecords: "Carregando registros...",
                zeroRecords: "Não foi encontrado nenhum resultado",
                emptyTable: "Não há nenhum dado disponível na tabela",
                paginate: {
                    first: "Primeiro",
                    previous: "Anterior",
                    next: "Próximo",
                    last: "Último"
                },
                aria: {
                    sortAscending: ": Ordenar colunas de forma ascendente",
                    sortDescending: ": Ordenar colunas de forma descendente"
                }

            }
        });
    });
</script>
