@model IEnumerable<AdmSimposio.Models.Trabalho>

<div class="table-responsive">
    <table class="table table-striped table-bordered" style="width:100%" id="tbTrabalho">
        <thead>
            <tr>
                <th></th>
                <th>
                    Autor
                </th>
                <th>
                    Título
                </th>
                <th>
                    Modalidade
                </th>
                <th>
                    Sessão Temática
                </th>
                <th>
                    Etapa
                </th>
                <th>
                    Opções
                </th>
            </tr>
        </thead>
        @if (Model.Count() > 1)
        {
            <tfoot style="display: table-header-group;">
                <tr style="background:#f5f5f5;">
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </tfoot>
        }
        <tbody>
            @{
                if (Model != null)
                {
                    foreach (var item in Model)
                    {
                        <tr class="odd gradeX" data-child-historico="@item.Historico">
                            <td class="@(item.Historico == "Ainda não houve avaliação para este trabalho." ? "details-control" : "details-control-warning" )"></td>
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.AutoresModelo.First().Nome)
                            </td>
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.Titulo)
                            </td>
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.DescModalidade)
                            </td>
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.TituloSimposioTematico)
                            </td>
                            <td style="vertical-align:middle">
                                @Html.DisplayFor(modelItem => item.DescEtapa)
                            </td>
                            <td style="text-align:center; vertical-align:middle">
                                <div class="dropup">
                                    <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" style="margin:-5px; padding-top:2%; padding-bottom:2%">
                                        Opções
                                        <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-right">
                                        <li>
                                            <a disabled href="#" onclick="DownloadTrabalho(@item.CodTrabalho,'docx')">
                                                <span class="fa fa-download fa-fw"></span> Visualizar
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
</div>

<div class="modal fade" id="ModalJustificativa" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div id="PartialJustificativa">
            </div>
        </div>
    </div>
</div>
<script>
    document.title = 'Adm Simpósio - Relatório de Trabalhos';
    function Justificativa(codigoTrabalhoInteracao) {
        var url = '@Url.Action("Justificativa", "Relatorio", new { CodTrabalhoInteracao = "Codigo" })'.replace("Codigo", codigoTrabalhoInteracao);
        $.ajax({
            url: url,
            type: 'POST',
            success: function (result) {
                $('#PartialJustificativa').html(result);
                $('#ModalJustificativa').modal({ backdrop: 'static', keyboard: false });
            },
            error: function (xhr, status) {
                NotificaoErro("Ocorreu um erro inesperado. Tente novamente, se o erro persistir entre em contato com nosso suporte.");
            }
        });
    }
  
    function DownloadTrabalho(CodTrabalho, FormatoExportacao) {
        $('#PartialIndex').hide();
        $('.panel-loading').show();
        var url = '@Url.Action("DownloadTrabalho", "Avaliacao", new { CodTrabalho = "CodigoTrabalho", FormatoExportacao = "docx" })'.replace("CodigoTrabalho", CodTrabalho).replace("&amp;", "&");
        //var url = "DownloadTrabalho?CodTrabalho=" + CodTrabalho + "&FormatoExportacao=" + FormatoExportacao;
        console.log('url>: ' + url);
        $.ajax({
            url: url,
            type: 'POST',
            success: function (result) {
                $('.panel-loading').hide();
                $('#PartialIndex').show();
                window.open(result.linkRedirect)
                NotificaoSucesso(result.message);
            },
            error: function (xhr, status) {
                NotificaoErro("Ocorreu um erro inesperado. Tente novamente, se o erro persistir entre em contato com nosso suporte.");
            }
        });
    }
    $(document).ready(function () {
        var table = $('#tbTrabalho').DataTable({
            dom: 'lBfrtip',
            buttons: ['excel', 'pdf', { extend: 'print', text: 'Imprimir' }],
            initComplete: function () {
                this.api().columns([ 3, 4, 5]).every(function () {
                    var column = this;
                    var select = $('<select style="width:100%"><option value=""></option></select>')
                        .appendTo($(column.footer()).empty())
                        .on('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? '^' + val + '$' : '', true, false)
                                .draw();
                        });

                    column.data().unique().sort().each(function (d, j) {
                        var val = $('<div/>').html(d).text();
                        select.append('<option value="' + val + '">' + val + '</option>');
                    });
                });
            },
            "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "Todos"]],
            "pageLength": 25,
            "order": [[1, "asc"]],
            columnDefs: [
                { "width": "20%", "targets": 1 }
            ],
            responsive: true,
            language: {
                processing: "Processando...",
                search: "Procurar:",
                lengthMenu: "Mostrar _MENU_ registros",
                info: "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                infoEmpty: "Mostrando de 0 até 0 de 0 registros",
                infoFiltered: "(filtrado de _MAX_ registros no total)",
                infoPostFix: "",
                loadingRecords: "Carregando registros...",
                zeroRecords: "Não foi encontrado nenhum resultado",
                emptyTable: "Não há nenhum dado disponível na tabela",
                paginate: {
                    first: "Primeiro",
                    previous: "Anterior",
                    next: "Próximo",
                    last: "Último"
                },
                aria: {
                    sortAscending: ": Ordenar colunas de forma ascendente",
                    sortDescending: ": Ordenar colunas de forma descendente"
                }

            }
        });

        $('#tbTrabalho tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var row = table.row(tr);

            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
                tr.removeClass('shown');
            }
            else {
                // Open this row
                row.child(format(tr.data('child-historico'))).show();
                tr.addClass('shown');
            }
        });
        $('#tbTrabalho tbody').on('click', 'td.details-control-warning', function () {
            var tr = $(this).closest('tr');
            var row = table.row(tr);

            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
                tr.removeClass('shown');
            }
            else {
                // Open this row
                row.child(format(tr.data('child-historico'))).show();
                tr.addClass('shown');
            }
        });
    });

    function format(historico) {
        return historico;
    }

</script>
