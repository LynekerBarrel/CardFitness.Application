@model AdmSimposio.Models.AnaisViewModel
@using AdmSimposio.Models.CrossCutting

@if (TempData["Sucesso"] != null)
{
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            NotificaoSucesso('@Html.Raw((string)TempData["Sucesso"])');
        });
    </script>
}
@if (TempData["Aviso"] != null)
{
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            NotificaoAviso('@Html.Raw((string)TempData["Aviso"])');
        });
    </script>
}
@if (TempData["Erro"] != null)
{
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            NotificaoErro('@Html.Raw((string)TempData["Erro"])');
        });
    </script>
}


<div class="panel panel-default">
    <div class="panel-heading">
        <a><i class="fa fa-tasks fa-fw"></i> Documentos para o Anais</a>
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="col-sm-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <p style="margin-bottom: 0px"><b>Todos os trabalhos APROVADOS estão listados nesta edição. Aqui será possível gerar e baixar os arquivos para Anais.</b></p>
                    </div>
                    <div class="panel-body">
                        @if (!string.IsNullOrEmpty(Model.UltimoAnaisGerado) || !string.IsNullOrEmpty(Model.UltimoAnaisGeradoCompleto))
                        {
                            <a href="#" data-toggle="modal" data-target="#ModalGerarArquivo" data-backdrop="static" data-keyboard="false" class="btn btn-success">Gerar novamente o Anais </a>
                        }
                        else
                        {
                            <a href="#" data-toggle="modal" data-target="#ModalGerarArquivo" data-backdrop="static" data-keyboard="false" class="btn btn-success">Gerar o Anais</a>
                        }
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.UltimoAnaisGerado) || !string.IsNullOrEmpty(Model.UltimoAnaisGeradoCompleto))
            {
                <div class="col-sm-6">
                    <div class="panel panel-primary text-center">
                        <div class="panel-heading">
                            <b>Resumo Simples</b>
                        </div>
                        <div class="panel-body">
                            @if (!string.IsNullOrEmpty(Model.UltimoAnaisGerado))
                            {
                                <p>Já foi gerado documento para este simpósio. Caso necessário, poderá gerar outro</p>
                                <p><b>Nome:</b> @Model.UltimoAnaisGerado</p>
                                <a href="https://siu.univale.br/WSSimposio/Simposio/@Session.Get("AdmSimposio.Models.Simposio", "AdmSimposio/SimposioAtivo").CodSimposio/Anais/@Model.UltimoAnaisGerado" class="btn btn-success">Clique aqui para baixar</a>
                            }
                            else
                            {
                                <p>Arquivo do Resumo ainda não foi gerado, mande gerar novamente. Caso persistir o problema entre em contato com o suporte.</p>
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="panel panel-primary text-center">
                        <div class="panel-heading">
                            <b>Trabalho Completo</b>
                        </div>
                        <div class="panel-body">
                            @if (!string.IsNullOrEmpty(Model.UltimoAnaisGeradoCompleto))
                            {
                                <p>Já foi gerado documento para este simpósio, caso necessário, poderá gerar outro</p>
                                <p><b>Nome:</b> @Model.UltimoAnaisGeradoCompleto</p>
                                <a href="https://siu.univale.br/WSSimposio/Simposio/@Session.Get("AdmSimposio.Models.Simposio", "AdmSimposio/SimposioAtivo").CodSimposio/Anais/@Model.UltimoAnaisGeradoCompleto" class="btn btn-success">Clique aqui para baixar</a>
                            }
                            else
                            {
                                <p>Arquivo do Trabalho Completo não foi gerado, mande gerar novamente. Caso persistir o problema entre em contato com o suporte.</p>
                            }
                        </div>
                    </div>
                </div>

            }
        </div>

        <div class="table-responsive">
            <table class="table table-striped table-bordered" style="width:100%" id="tbTrabalho">
                <thead>
                    <tr>
                        @*<th></th>*@
                        <th>
                            Autor
                        </th>
                        <th>
                            Título
                        </th>
                        <th>
                            Modalidade
                        </th>
                        <th>
                            Sessão Temática
                        </th>
                        <th>
                            Etapa
                        </th>
                        <th>
                            Opções
                        </th>
                    </tr>
                </thead>
                @if (Model.Trabalhos.Count() > 1)
                {
                    <tfoot style="display: table-header-group;">
                        <tr style="background:#f5f5f5;">
                            @*<th></th>*@
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                    </tfoot>
                }
                <tbody>
                    @{
                        if (Model != null)
                        {
                            foreach (var item in Model.Trabalhos)
                            {
                                <tr class="odd gradeX" data-child-historico="@item.Historico">
                                    @*<td class="@(item.Historico == "Ainda não houve avaliação para este trabalho." ? "details-control" : "details-control-warning" )"></td>*@
                                    <td style="vertical-align:middle">
                                        @Html.DisplayFor(modelItem => item.AutoresModelo.First().Nome)
                                    </td>
                                    <td style="vertical-align:middle">
                                        @Html.DisplayFor(modelItem => item.Titulo)
                                    </td>
                                    <td style="vertical-align:middle">
                                        @Html.DisplayFor(modelItem => item.DescModalidade)
                                    </td>
                                    <td style="vertical-align:middle">
                                        @Html.DisplayFor(modelItem => item.TituloSimposioTematico)
                                    </td>
                                    <td style="vertical-align:middle">
                                        @Html.DisplayFor(modelItem => item.DescEtapa)
                                    </td>
                                    <td style="text-align:center; vertical-align:middle">
                                        <div class="dropup">
                                            <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" style="margin:-5px; padding-top:2%; padding-bottom:2%">
                                                Opções
                                                <span class="caret"></span>
                                            </button>
                                            <ul class="dropdown-menu dropdown-menu-right">
                                                <li>
                                                    <a disabled href="#" onclick="DownloadTrabalho(@item.CodTrabalho,'docx')">
                                                        <span class="fa fa-download fa-fw"></span> Visualizar
                                                    </a>
                                                </li>
                                                <li>
                                                    <a href="@Url.Action("EditAnais","Trabalho", new { item.CodTrabalho })">
                                                        <span class="fa fa-edit fa-fw"></span>  Editar
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


<div class="modal fade" id="ModalGerarArquivo" tabindex="-1" role="dialog" aria-labelledby="ModalGerarArquivo" aria-hidden="true">
    <div class="modal-dialog" role="document" style=" height: 60%">
        <div class="modal-content">
            <div style="color: white; background-color: #004077; font-weight:bold; border-top-left-radius:inherit; border-top-right-radius:inherit" class="modal-header">
                <button id="Fechar" type="button" class="close text" style="color:white !important; opacity:1" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="exampleModalLabel">Gerar Arquivo do Anais</h4>
            </div>
            <div class="modal-body" style="font-family: Calibri">
                <p>Ao clicar em gerar, será criado dois arquivos, um com a junção dos trabalhos aprovados na modalidade de Resumo Simples e outro com a junção dos trabalhos aprovados na modalidade de Trabalho Completo.</p>
                <p>A ordem de organização dos arquivos está incialmente agrupando por Forma de Apresentação (Comunicação Oral, Documentário, Mesa Redonda). E para cada forma de apresentação, agrupando por Sessão Temática.</p>
                <br />
                <br />
                <p><font color="red"><b>Atenção:</b> Este é um processo demorado, portanto o sistema poderá levar até 10 minutos para gerar o arquivo. Não feche a página ou atualize o navegador até o sistema confirmar a conclusão.</font></p>
            </div>
            <div class="modal-footer">
                <button id="Gerar" type="button" class="btn btn-success" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Gerando">Gerar</button>
                <button id="Cancelar" type="button" class="btn btn-primary" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.title = 'Adm Simpósio - Trabalhos para publicar no Anais';

    $('#Gerar').on('click', function () {
        var $this = $(this);
        $this.button('loading');
         $('#Cancelar').attr("disabled", "disabled");
        $('#Fechar').attr("disabled", "disabled");

        var url = '@Url.Action("GerarAnais", "Anais")';
        $.ajax({
            url: url,
            type: 'POST',
            success: function (result) {
                $this.button('reset');
                $('#Cancelar').removeAttr('disabled');
                $('#Fechar').removeAttr('disabled');
                location.reload(true);
            },
            error: function (xhr, status) {
                NotificaoErro("Ocorreu um erro inesperado. Tente novamente, se o erro persistir entre em contato com nosso suporte.");
            }
        });
    });

    function DownloadTrabalho(CodTrabalho, FormatoExportacao) {
        $('#PartialIndex').hide();
        $('.panel-loading').show();
        var url = '@Url.Action("DownloadTrabalho", "Avaliacao", new { CodTrabalho = "CodigoTrabalho", FormatoExportacao = "docx" })'.replace("CodigoTrabalho", CodTrabalho).replace("&amp;", "&");
        $.ajax({
            url: url,
            type: 'POST',
            success: function (result) {
                $('.panel-loading').hide();
                $('#PartialIndex').show();
                window.open(result.linkRedirect)
                NotificaoSucesso(result.message);
            },
            error: function (xhr, status) {
                NotificaoErro("Ocorreu um erro inesperado. Tente novamente, se o erro persistir entre em contato com nosso suporte.");
            }
        });
    }
    $(document).ready(function () {
        var table = $('#tbTrabalho').DataTable({
            initComplete: function () {
                this.api().columns([ 2, 3, 4]).every(function () {
                    var column = this;
                    var select = $('<select style="width:100%"><option value=""></option></select>')
                        .appendTo($(column.footer()).empty())
                        .on('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? '^' + val + '$' : '', true, false)
                                .draw();
                        });

                    column.data().unique().sort().each(function (d, j) {
                        var val = $('<div/>').html(d).text();
                        select.append('<option value="' + val + '">' + val + '</option>');
                    });
                });
            },
            "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "Todos"]],
            "pageLength": 25,
            "order": [[1, "asc"]],
            columnDefs: [
                { "width": "20%", "targets": 0 }
            ],
            responsive: true,
            language: {
                processing: "Processando...",
                search: "Procurar:",
                lengthMenu: "Mostrar _MENU_ registros",
                info: "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                infoEmpty: "Mostrando de 0 até 0 de 0 registros",
                infoFiltered: "(filtrado de _MAX_ registros no total)",
                infoPostFix: "",
                loadingRecords: "Carregando registros...",
                zeroRecords: "Não foi encontrado nenhum resultado",
                emptyTable: "Não há nenhum dado disponível na tabela",
                paginate: {
                    first: "Primeiro",
                    previous: "Anterior",
                    next: "Próximo",
                    last: "Último"
                },
                aria: {
                    sortAscending: ": Ordenar colunas de forma ascendente",
                    sortDescending: ": Ordenar colunas de forma descendente"
                }

            }
        });

    });

</script>
