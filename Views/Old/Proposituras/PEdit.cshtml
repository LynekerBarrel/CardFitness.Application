@model AdmSimposio.Models.Propositura


<script src="~/js/SimposioValidate.js"></script>

@if (TempData["Sucesso"] != null)
{
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            NotificaoSucesso('@Html.Raw((string)TempData["Sucesso"])');
        });
    </script>
}
@if (TempData["Aviso"] != null)
{
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            NotificaoAviso('@Html.Raw((string)TempData["Aviso"])');
        });
    </script>
}
@if (TempData["Erro"] != null)
{
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function () {
            NotificaoErro('@Html.Raw((string)TempData["Erro"])');
        });
    </script>
}
<script type="text/javascript" charset="utf-8">

    $(function () {
        $('#msCurso').change(function () {
        }).multipleSelect({
            filter: true,
            width: '100%',
            placeholder: 'Selecione...'
        });
    });
    $(function () {
        $('#msAreaConhecimento').change(function () {
        }).multipleSelect({
            filter: true,
            width: '100%',
            placeholder: 'Selecione...'
        });
    });
</script>
@if (TempData["AutorNotFound"] != null)
{
    <script type="text/javascript" charset="utf-8">

        $.ajax({
            url: '@Url.Action("Mail","Proposituras")',
            type: 'POST',
            success: function (result) {
                $('#PartialMail').html(result);
                $('#ModalMail').modal({ backdrop: 'static', keyboard: false});
            },
            error: function (xhr, status) {
                alert(status);
            }
        });
    </script>
}
<div class="panel-body">
    <form asp-action="Edit" id="Propositura">
        @Html.HiddenFor(x => x.QtdMaxAutoresPropositura)
        @Html.HiddenFor(x => x.TamDescPropositura)
        @Html.HiddenFor(x => x.TamTituloPropositura)
        @Html.HiddenFor(x => x.Proponente)
        @Html.HiddenFor(x => x.CodPropositura)
        @Html.HiddenFor(x => x.DataCriacao)
        @Html.HiddenFor(x => x.CodSimposio)
        @Html.HiddenFor(x => x.CodSituacaoPropositura)

        <div class="form-group">
            <label asp-for="CodAtividadeProposta" class="control-label">Atividade Proposta</label>
            @Html.DropDownListFor(x => x.CodAtividadeProposta, new SelectList(Model.AtividadesPropostas, "CodAtividadeProposta", "DescAtividadeProposta"), new { @class = "form-control obrigatorio" })
        </div>
        <div class="form-group">
            <label asp-for="CodCursosInteresse" class="control-label">Cursos de Interesse</label>
            @Html.ListBoxFor(x => x.CodCursosInteresse, new MultiSelectList(Model.CursosInteresse, "CodCurso", "DescCurso"), new { id = "msCurso", multiple = "multiple", @class = "msCurso obrigatorio" })
        </div>
        <div class="form-group">
            <label asp-for="CodAreaConhecimento" class="control-label">Área de Conhecimento</label>
            @Html.ListBoxFor(x => x.CodAreaConhecimento, new MultiSelectList(Model.AreaConhecimento, "CodAreaConhecimento", "DescAreaConhecimento"), new { id = "msAreaConhecimento", multiple = "multiple", @class = "msAreaConhecimento obrigatorio" })
        </div>
        <div class="form-group">
            <label asp-for="TituloPropositura" class="control-label"></label>
            <input asp-for="TituloPropositura" id="TituloPropositura" onkeyup="textCounter(this, 'counterTitulo', @Model.TamTituloPropositura);" class="form-control obrigatorio" type="text" />
            <p style="color:#808080" id="counterTitulo">Caracteres Restantes: <b>@(Model.TamTituloPropositura - Model.TituloPropositura.Length)</b></p>
        </div>
        <div class="form-group">
            <label asp-for="ResumoPropositura" class="control-label">Resumo da proposta</label>
            @Html.TextAreaFor(m => m.ResumoPropositura, new { @class = "form-control obrigatorio", @onkeyup = "textCounter(this,'counterResumo'," + @Model.TamDescPropositura + ");", id = "message" })
            <p style="color:#808080" id="counterResumo">Caracteres Restantes: <b>@(Model.TamDescPropositura - Model.ResumoPropositura.Length)</b></p>
        </div>
        <div class="col-sm-12 autores">
            <br />
            <div class="form-group">
                <div class="col-sm-12">
                    <label class="control-label">Proponentes</label>
                </div>
                <div class="col-sm-10">
                    <div class="form-group">
                        <input type="email" asp-for="EmailCoautor" class="form-control EmailCoautor" placeholder="Informe o E-MAIL da pessoa que você deseja convidar para compartilhar a propositura desta sessão." />
                    </div>
                </div>

                <div class="col-sm-2">
                    <div class="form-group">
                        <a onclick="ValidarEmail()" class="btn btn-primary ProcurarCoautor" style="width:100%;">Procurar</a>
                    </div>
                </div>
                <div class="col-sm-12">

                    <div class="table-responsive" style="background-color:#fff;">

                        <table class="table table-striped table-bordered" style="margin-bottom: 0px">
                            <thead>
                                <tr>
                                    <th>
                                        Nome
                                    </th>
                                    <th>
                                        Email
                                    </th>
                                    <th>
                                        #
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    if (Model != null)
                                    {
                                        foreach (var item in Model.Autores)
                                        {
                                            @Html.HiddenFor(x => x.Autores[Model.Autores.IndexOf(item)].CodPessoa)
                                            @Html.HiddenFor(x => x.Autores[Model.Autores.IndexOf(item)].Nome)
                                            @Html.HiddenFor(x => x.Autores[Model.Autores.IndexOf(item)].Email)
                                            @Html.HiddenFor(x => x.Autores[Model.Autores.IndexOf(item)].Tipo)
                                            @Html.HiddenFor(x => x.Autores[Model.Autores.IndexOf(item)].Autor)
                                            <tr class="odd gradeX">


                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Nome)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Email)
                                                </td>
                                                <td style="text-align:center; vertical-align:middle">

                                                    <div class="dropup">
                                                        @if (!@item.Autor)
                                                        {
                                                            <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" style="margin:-5px; padding-top:2%; padding-bottom:2%">
                                                                Opções
                                                                <span class="caret"></span>
                                                            </button>
                                                        }
                                                        else
                                                        {
                                                            <button disabled class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" style="margin:-5px; padding-top:2%; padding-bottom:2%">
                                                                Opções
                                                                <span class="caret"></span>
                                                            </button>
                                                        }
                                                        <ul class="dropdown-menu dropdown-menu-right">

                                                            <li>
                                                                <a onclick="DeletarAutor(@item.CodPessoa)">
                                                                    <span class="fa fa-trash fa-fw"></span> Excluir
                                                                </a>
                                                            </li>

                                                        </ul>

                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="pull-right">
                <input type="submit" value="Atualizar" class="btn btn-success" onclick="if (!validaForm(this)) return false;" />
                <a href="@Url.Action("Index","Proposituras", new { Ambiente = "Proposituras"})" class="btn btn-primary">Cancelar</a>
            </div>
        </div>

    </form>
</div>


<div class="modal fade" id="ModalMail" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div style="color: white; background-color: #004077; font-weight:bold; border-top-left-radius:inherit; border-top-right-radius:inherit" class="modal-header">
                <button type="button" class="close text" style="color:white !important; opacity:1" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="exampleModalLabel">Atenção!</h4>
            </div>
            <div id="PartialMail"></div>
        </div>
    </div>
</div>



<script>

    $(document).ready(function () {
        textCounter('TituloPropositura', 'counterTitulo', 500);
    });

    function ValidarEmail(campo) {
        if (validationExpressionEmail.test($('.EmailCoautor').val())) {
            inputSucesso($('.EmailCoautor'));
            if (validaForm(campo)) {
                CallForm();
            }
            else {
                NotificaoAviso("É necessário preencher todos so dados da propositura para adicionar um novo proponente!");
            }
        }
        else {
            inputErro($('.EmailCoautor'));
            NotificaoAviso("O email inserido é inválido. Verifique e tente novamente.");
        }
    }


    function ValidarMS(id) {
        $('#' + id).removeClass("input-erro");
        $('.' + id).removeClass("input-erro");
        $('#' + id).removeClass("input-sucesso");
        $('.' + id).removeClass("input-sucesso");
        if ($('#' + id).val().length != 0) {
            inputSucesso($('.' + id));
        }
    }

    function DeletarAutor(val) {
        console.log(val);
        $('.panel-loading').show();
        $('#BodyPropositura').hide();
        //await sleep(1000);
        var url = "DeletarAutor?Partial=PEdit&CodPessoa=" + val;
        $.ajax({
            url: url,
            type: 'POST',
            data: $('#Propositura').serialize(),
            success: function (result) {

                $('#BodyPropositura').empty();
                $('#BodyPropositura').html(result);
                $('.panel-loading').hide();
                $('#BodyPropositura').show();

            },
            error: function (xhr, status) {
                NotificaoErro("Ocorreu um erro inesperado. Tente novamente, se o erro persistir entre em contato com nosso suporte.");
            }
        });
    }
    window.onload = function () {
        console.log("OnLoad");
    }
    //function ValidarEmail() {

    //    if (validationExpressionEmail.test($('.EmailCoautor').val())) {
    //        inputSucesso($('.EmailCoautor'));
    //        CallForm();
    //    }
    //    else {
    //        inputErro($('.EmailCoautor'));
    //    }
    //}
    function CallForm() {
        console.log("PEdit", "CallForm()")
        $('.panel-loading').show();
        $('#BodyPropositura').hide();
        var url = "LoadEdit";
        $.ajax({
            url: url,
            type: 'POST',
            data: $('#Propositura').serialize(),
            success: function (result) {
                $('.panel-loading').hide();
                $('#BodyPropositura').empty();
                $('#BodyPropositura').html(result);

                $('#BodyPropositura').show();

            },
            error: function (xhr, status) {
                alert(status);
            }
        });


    }

    window.onload = function () {
        console.log("OnLoad");
    }

</script>

